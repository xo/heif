name: Test
on: [push, pull_request]
env:
  APP: heif.test
  GO_VERSION: stable

jobs:
  build_for_linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y \
          build-essential \
          qemu-user \
          gcc-arm-linux-gnueabihf \
          g++-arm-linux-gnueabihf \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu \
          libstdc++6-armhf-cross \
          libstdc++6-arm64-cross \
          libc6-dev-armhf-cross \
          libc6-dev-arm64-cross \
          file
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Build ${{ matrix.arch }}
      run: |
        ./cross.sh -a ${{ matrix.arch }} -v
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-linux-${{ matrix.arch }}
        path: build/linux/**/*
        if-no-files-found: error

  build_for_macos:
    name: Build for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - name: Install build dependencies
      run: |
        brew install coreutils gnu-tar
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Build ${{ matrix.arch }}
      run: |
        ./cross.sh -a ${{ matrix.arch }} -v
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-darwin-${{ matrix.arch }}
        path: build/darwin/**/*
        if-no-files-found: error

  build_for_macos_universal:
    name: Build for macOS (universal)
    needs:
      - build_for_macos
    runs-on: macos-latest
    steps:
    - name: Install build dependencies
      run: |
        brew install coreutils gnu-tar
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - name: Build universal
      run: |
        export WORKDIR=$PWD/build/darwin/universal
        mkdir -p $WORKDIR

        cp dist-darwin-amd64/*/$APP $WORKDIR/$APP-amd64
        cp dist-darwin-arm64/*/$APP $WORKDIR/$APP-arm64

        file $WORKDIR/$APP-{amd64,arm64}

        lipo -create -output $WORKDIR/$APP $WORKDIR/$APP-amd64 $WORKDIR/$APP-arm64
        chmod +x $WORKDIR/$APP
        file $WORKDIR/$APP

        rm $WORKDIR/$APP-{amd64,arm64}
        sudo /usr/sbin/purge

        ls -alh $WORKDIR/*
        sha256sum $WORKDIR/*
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-darwin-universal
        path: build/darwin/**/*
        if-no-files-found: error

  build_for_windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Build amd64
      shell: bash
      run: |
        ./cross.sh -v
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-windows
        path: build/windows/**/*
        if-no-files-found: error
