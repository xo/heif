#!/bin/bash

# github repo
REPO=strukturag/libheif

SRC=$(realpath $(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd))

set -e

WORKDIR=$HOME/src/charts

BUILD_TARGETS=""

OPTIND=1
while getopts "t:" opt; do
case "$opt" in
  t) BUILD_TARGETS="$OPTARG" ;;
esac
done

mkdir -p $WORKDIR

git_latest_tag() {
  git -C "$1" describe --abbrev=0 --tags
}

git_checkout_reset() {
  local dir="$WORKDIR/$1" name="$1" repo="$2"
  if [ ! -d "$dir" ]; then
    (set -x;
      git clone "$repo" "$dir"
    )
  fi
  (set -x;
    git -C "$dir" fetch origin
  )
  local ver=$(git_latest_tag "$dir")
  echo "$name $ver"
  echo "$ver" > "$SRC/version.txt"
  (set -x;
    git -C "$dir" reset --hard
    git -C "$dir" clean -f -x -d -e node_modules
    git -C "$dir" checkout "$ver" &> /dev/null
  )
}

git_checkout_reset libheif "https://github.com/${REPO}.git"

declare -A TARGETS=(
#  [darwin_amd64]=
#  [darwin_arm64]=
  [linux_amd64]=''
#  [linux_arm64]=
#  [linux_arm]=
#  [solaris_amd64]=
#  [windows_amd64]=
)

#[dragonfly_amd64]=
#[freebsd_amd64]=
#[netbsd_amd64]=
#[openbsd_amd64]=
#[windows_arm64]=

if [ -z "$BUILD_TARGETS" ]; then
  BUILD_TARGETS="${!TARGETS[@]}"
fi

BUILD_TARGETS=$(sed -e 's/\s\+/\n/g' <<< "$BUILD_TARGETS" | sort -i |tr '\n' ' ')

cp $WORKDIR/libheif/libheif/heif.h $SRC/libheif

# generate supported file types
MAGICS=$(sed -n 's/^#define heif_brand2_\([a-z0-9]\+\).*/\1/p' < $WORKDIR/libheif/libheif/heif.h)

REG=""
for magic in $MAGICS; do
  REG+="$(cat << END
	image.RegisterFormat("${magic}", "????ftyp${magic}", Decode, DecodeConfig);
END
)"
done

cat > $SRC/z.go << END
package heif

import (
  "image"
)

// REPLACE

func init() {
  $REG
}
END

gofumpt -w -extra $SRC/z.go
perl -pi -e 's/REPLACE/Generated by gen.sh. DO NOT EDIT./' $SRC/z.go

#for TARGET in $BUILD_TARGETS; do
#  DEST=$SRC/libheif/$TARGET
#  mkdir -p $DEST
#
#  BUILD_DIR=$WORKDIR/libheif/build/$TARGET
#  mkdir -p $BUILD_DIR
#
#  (set -x;
#    cmake \
#      --preset release-noplugins \
#      -DBUILD_SHARED_LIBS=OFF \
#      -B $BUILD_DIR \
#      -S $WORKDIR/libheif
#
#    make -C $BUILD_DIR -j $((`nproc`+2))
#
#    cp $BUILD_DIR/libheif/libheif.a $DEST
#    chmod -x $DEST/libheif.a
#
#    cp $BUILD_DIR/libheif/heif_version.h $SRC/libheif
#  )
#done
